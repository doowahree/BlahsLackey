"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class AvailableListeners(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    LISTENERS_FIELD_NUMBER: builtins.int
    @property
    def listeners(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        listeners : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["listeners",b"listeners"]) -> None: ...
global___AvailableListeners = AvailableListeners

class ListenerMapping(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class ChannelToListenerMappingEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        @property
        def value(self) -> global___AvailableListeners: ...
        def __init__(self,
            *,
            key : typing.Optional[typing.Text] = ...,
            value : typing.Optional[global___AvailableListeners] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CHANNEL_TO_LISTENER_MAPPING_FIELD_NUMBER: builtins.int
    @property
    def channel_to_listener_mapping(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___AvailableListeners]: ...
    def __init__(self,
        *,
        channel_to_listener_mapping : typing.Optional[typing.Mapping[typing.Text, global___AvailableListeners]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel_to_listener_mapping",b"channel_to_listener_mapping"]) -> None: ...
global___ListenerMapping = ListenerMapping
